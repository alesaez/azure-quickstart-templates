{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "skuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The admin user of the SQL Server"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password of the admin user of the SQL Server"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "actionGroupSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "Subscription Id of an existing Action Group for alerts."
            }
        },
        "actionGroupResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resource group of an existing Action Group for alerts."
            }
        },
        "actionGroupName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of an existing Action Group for alerts."
            }
        }
    },
    "variables": {
        "uniqueString": "[uniqueString(resourceGroup().id)]",
        "hostingPlanName": "[concat('hostingplan', variables('uniqueString'))]",
        "webSiteName": "[concat('webSite', variables('uniqueString'))]",
        "sqlserverName": "[concat('sqlserver', variables('uniqueString'))]",
        "databaseName": "sampledb",
        "alertsActionEmpty": [
        ],
        "alertsActionsActionGroup": [
            {
                "actionGroupId": "[resourceId(parameters('actionGroupSubscriptionId'), parameters('actionGroupResourceGroupName'), 'Microsoft.Insights/actiongroups', parameters('actionGroupName'))]",
                "webHookProperties": {
                }
            }
        ],
        "alertsActions": "[if(empty(parameters('actionGroupName')), variables('alertsActionEmpty'), variables('alertsActionsActionGroup'))]"

    },
    "resources": [
        {
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "SqlServer"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "apiVersion": "2017-10-01-preview",
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "location": "[parameters('location')]",
                    "tags": {
                        "displayName": "Database"
                    },
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "apiVersion": "2015-05-01-preview",
                    "type": "firewallrules",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "apiVersion": "2018-02-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
                "displayName": "Website"
            },
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            },
            "resources": [
                {
                    "apiVersion": "2016-03-01",
                    "type": "config",
                    "name": "connectionstrings",
                    "dependsOn": [
                        "[variables('webSiteName')]"
                    ],
                    "properties": {
                        "DefaultConnection": {
                            "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "2015-04-01",
            "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
            "type": "Microsoft.Insights/autoscalesettings",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "Resource",
                "displayName": "AutoScaleSettings"
            },
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 2,
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80.0
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60.0
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[concat(variables('hostingPlanName'), '-', resourceGroup().name)]",
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            }
        },
        {
            "apiVersion": "2018-03-01",
            "type": "microsoft.insights/metricAlerts",
            "name": "[concat('ServerErrors ', variables('hostingPlanName'))]",
            "location": "global",
            "dependsOn": [
                "[variables('webSiteName')]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webSiteName')))]": "Resource",
                "displayName": "ServerErrorsAlertRule"
            },
            "properties": {
                "severity": 3,
                "enabled": "[not(empty(parameters('actionGroupName')))]",
                "scopes": [
                    "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "dimensions": [
                            ],
                            "metricName": "Http5xx",
                            "metricNamespace": "",
                            "name": "[concat('ServerErrors ', variables('hostingPlanName'))]",
                            "operator": "GreaterThan",
                            "threshold": "0",
                            "timeAggregation": "Average"
                        }
                    ]
                },
                "actions": "[variables('alertsActions')]",
                "description": "[concat(variables('webSiteName'), ' has some server errors, status code 5xx.')]"
            }
        },
        {
            "apiVersion": "2018-03-01",
            "type": "microsoft.insights/metricAlerts",
            "name": "[concat('ForbiddenRequests ', variables('hostingPlanName'))]",
            "location": "global",
            "dependsOn": [
                "[variables('webSiteName')]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webSiteName')))]": "Resource",
                "displayName": "ForbiddenRequestsAlertRule"
            },
            "properties": {
                "severity": 3,
                "enabled": "[not(empty(parameters('actionGroupName')))]",
                "scopes": [
                    "[resourceId('Microsoft.Web/sites', variables('webSiteName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "dimensions": [
                            ],
                            "metricName": "Http403",
                            "metricNamespace": "",
                            "name": "[concat('ForbiddenRequests ', variables('hostingPlanName'))]",
                            "operator": "GreaterThan",
                            "threshold": "0",
                            "timeAggregation": "Average"
                        }
                    ]
                },
                "actions": "[variables('alertsActions')]",
                "description": "[concat(variables('webSiteName'), ' has some requests that are forbidden, status code 403.')]"
            }
        },
        {
            "apiVersion": "2018-03-01",
            "type": "microsoft.insights/metricAlerts",
            "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
            "location": "global",
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "Resource",
                "displayName": "CPUHighAlertRule"
            },
            "properties": {
                "severity": 3,
                "enabled": "[not(empty(parameters('actionGroupName')))]",
                "scopes": [
                    "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
                ],
                "evaluationFrequency": "PT5M",
                "windowSize": "PT15M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "dimensions": [
                            ],
                            "metricName": "CpuPercentage",
                            "metricNamespace": "",
                            "name": "[concat('CPUHigh ', variables('hostingPlanName'))]",
                            "operator": "GreaterThan",
                            "threshold": "90",
                            "timeAggregation": "Average"
                        }
                    ]
                },
                "actions": "[variables('alertsActions')]",
                "description": "[concat('The average CPU is high across all the instances of ', variables('hostingPlanName'))]"
            }
        },
        {
            "apiVersion": "2018-03-01",
            "type": "microsoft.insights/metricAlerts",
            "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
            "location": "global",
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "Resource",
                "displayName": "LongHttpQueueAlertRule"
            },
            "properties": {
                "severity": 3,
                "enabled": "[not(empty(parameters('actionGroupName')))]",
                "scopes": [
                    "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
                    "allOf": [
                        {
                            "dimensions": [
                            ],
                            "metricName": "HttpQueueLength",
                            "metricNamespace": "",
                            "name": "[concat('LongHttpQueue ', variables('hostingPlanName'))]",
                            "operator": "GreaterThan",
                            "threshold": "100",
                            "timeAggregation": "Average"
                        }
                    ]
                },
                "actions": "[variables('alertsActions')]",
                "description": "[concat('The HTTP queue for the instances of ', variables('hostingPlanName'), ' has a large number of pending requests.')]"
            }
        },
        {
            "apiVersion": "2015-05-01",
            "name": "[concat('AppInsights', variables('webSiteName'))]",
            "type": "Microsoft.Insights/components",
            "location": "southcentralus",
            "dependsOn": [
                "[variables('webSiteName')]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('webSiteName')))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "ApplicationId": "[variables('webSiteName')]"
            }
        }
    ],
    "outputs": {
        "siteUri": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Web/sites/', variables('webSiteName'))).hostnames[0]]"
        },
        "sqlSvrFqdn": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]"
        }
    }
}
